// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TFBackEnd.Api.Data;

namespace TFBackEnd.Api.Migrations
{
    [DbContext(typeof(TFBackEndApiContext))]
    [Migration("20211122204341_inicio1")]
    partial class inicio1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("TFBackEnd.Api.Models.Instalacione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Appid")
                        .HasColumnType("int");

                    b.Property<bool>("Exitosa")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Operarioid")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("idApp")
                        .HasColumnType("int");

                    b.Property<int>("idOperario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Appid");

                    b.HasIndex("Operarioid");

                    b.ToTable("Instalaciones");
                });

            modelBuilder.Entity("TFBackEnd.Api.Models.Operario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Operarios");
                });

            modelBuilder.Entity("TFBackEnd.Api.Models.Telefono", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("InstalacioneId")
                        .HasColumnType("int");

                    b.Property<int>("idInstalacion")
                        .HasColumnType("int");

                    b.Property<string>("marca")
                        .HasColumnType("text");

                    b.Property<string>("modelo")
                        .HasColumnType("text");

                    b.Property<float>("precio")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("InstalacioneId");

                    b.ToTable("Telefonos");
                });

            modelBuilder.Entity("TFBackEnd.Api.Models.app", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("apps");
                });

            modelBuilder.Entity("TFBackEnd.Api.Models.Instalacione", b =>
                {
                    b.HasOne("TFBackEnd.Api.Models.app", "App")
                        .WithMany("Instalacione")
                        .HasForeignKey("Appid");

                    b.HasOne("TFBackEnd.Api.Models.Operario", "Operario")
                        .WithMany("Instalacione")
                        .HasForeignKey("Operarioid");

                    b.Navigation("App");

                    b.Navigation("Operario");
                });

            modelBuilder.Entity("TFBackEnd.Api.Models.Telefono", b =>
                {
                    b.HasOne("TFBackEnd.Api.Models.Instalacione", "Instalacione")
                        .WithMany("Telefono")
                        .HasForeignKey("InstalacioneId");

                    b.Navigation("Instalacione");
                });

            modelBuilder.Entity("TFBackEnd.Api.Models.Instalacione", b =>
                {
                    b.Navigation("Telefono");
                });

            modelBuilder.Entity("TFBackEnd.Api.Models.Operario", b =>
                {
                    b.Navigation("Instalacione");
                });

            modelBuilder.Entity("TFBackEnd.Api.Models.app", b =>
                {
                    b.Navigation("Instalacione");
                });
#pragma warning restore 612, 618
        }
    }
}
